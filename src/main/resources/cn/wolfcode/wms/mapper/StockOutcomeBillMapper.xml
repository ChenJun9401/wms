<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.StockOutcomeBillMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.StockOutcomeBill">
        <id column="id" property="id"/>
        <result column="sn" property="sn"/>
        <result column="vdate" property="vdate"/>
        <result column="status" property="status"/>
        <result column="totalAmount" property="totalAmount"/>
        <result column="totalNumber" property="totalNumber"/>
        <result column="auditTime" property="auditTime"/>
        <result column="inputTime" property="inputTime"/>
        <association property="inputUser" javaType="Employee" columnPrefix="inputUser_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="auditor" javaType="Employee" columnPrefix="auditor_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="depot" javaType="Depot" columnPrefix="depot_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <association property="client" javaType="Client" columnPrefix="client_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
        <collection property="items" ofType="cn.wolfcode.wms.domain.StockOutcomeBillItem"
                    select="cn.wolfcode.wms.mapper.StockOutcomeBillItemMapper.selectByBillId"
                    column="id"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
    delete from stockOutcomeBill
    where id = #{id}
  </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into stockOutcomeBill (sn, vdate, status, totalAmount, totalNumber, auditTime, 
      inputTime, inputUser_id, auditor_id, depot_id,client_id)
    values (#{sn}, #{vdate}, #{status}, #{totalAmount}, #{totalNumber}, #{auditTime}, 
      #{inputTime}, #{inputUser.id}, #{auditor.id}, #{depot.id},#{client.id})
  </insert>
    <update id="updateByPrimaryKey">
    update stockOutcomeBill
    set sn = #{sn},
      vdate = #{vdate},
      totalAmount = #{totalAmount},
      totalNumber = #{totalNumber},
      depot_id = #{depot.id},
        client_id = #{client.id}
    where id = #{id}
  </update>
    <update id="audit">
    update stockOutcomeBill set status = #{status},auditor_id = #{auditor.id},auditTime = #{auditTime}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
        bill.id,
        bill.sn,
        bill.vdate,
        bill.status,
        bill.totalAmount,
        bill.totalNumber,
        bill.auditTime,
        bill.inputTime,
        d.id depot_id,
        d.name depot_name,
        c.id client_id,
        c.name client_name
    from stockOutcomeBill bill
    join depot d on d.id=bill.depot_id
        join client c on c.id = bill.client_id
    where bill.id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select
        id,
        sn,
        vdate,
        status,
        totalAmount,
        totalNumber,
        auditTime,
        inputTime,
        inputUser_id,
        auditor_id,
        depot_id
    from stockOutcomeBill
  </select>
    <select id="query4Count" resultType="int">
        select count(bill.id)
        FROM stockOutcomeBill bill JOIN employee inputUser on inputUser.id = bill.inputUser_id
        LEFT JOIN employee auditor ON auditor.id = bill.auditor_id
        JOIN depot d ON d.id = bill.depot_id
        JOIN client c ON c.id = bill.client_id
        <include refid="where_sql"/>
    </select>
    <select id="query4List" resultMap="BaseResultMap">
        SELECT
        bill.id,
        bill.sn,
        bill.vdate,
        bill.status,
        bill.totalAmount,
        bill.totalNumber,
        inputUser.id inputUser_id,
        inputUser.name inputUser_name,
        auditor.id auditor_id,
        auditor.name auditor_name,
        d.id depot_id,
        d.name depot_name,
        c.id client_id,
        c.name client_name
        FROM stockOutcomeBill bill
        JOIN employee inputUser on inputUser.id = bill.inputUser_id
        LEFT JOIN employee auditor ON auditor.id = bill.auditor_id
        JOIN depot d ON d.id = bill.depot_id
        JOIN client c ON c.id = bill.client_id
        <include refid="where_sql"/>
        limit #{start},#{pageSize}
    </select>
    <sql id="where_sql">
        <where>
            <if test="beginDate!=null">
                and bill.vdate &gt;=#{beginDate}
            </if>
            <if test="endDate!=null">
                and bill.vdate &lt;=#{endDate}
            </if>
            <if test="depotId > 0">
                and bill.depot_id = #{depotId}
            </if>
            <if test="clientId > 0">
                and bill.client_id =#{clientId}
            </if>
            <if test="status >= 0">
                and bill.status =#{status}
            </if>
        </where>
    </sql>
</mapper>